/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib;
import static java.lang.Integer.parseInt;
import oru.inf.InfDB;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import oru.inf.InfException;

/**
 *
 * @author filip
 */
public class ÄndraAgentSomÄrOmrådeschef extends javax.swing.JFrame {
private static InfDB idb;
    /**
     * Creates new form ÄndraAgentSomÄrOmrådeschef
     */
    public ÄndraAgentSomÄrOmrådeschef(InfDB idb) {
        initComponents();
        this.idb = idb;
        fyllBoxMedAgentNamn();
        fyllBoxMedOmrade();
    }
    //två metoder som fyller komboxoeb direkt med samtlig data som skrivs i metoderna, i dessa fall med samtliga agentnamn samt områdesnamn som finns i databasen.

     private void fyllBoxMedAgentNamn() {
        
         
        String fraga = "SELECT namn from Agent";
        
        ArrayList <String> allaAgentNamn;
        
        try {
            allaAgentNamn = idb.fetchColumn(fraga);
            
            for(String namn:allaAgentNamn) {
                namnPåAgenter.addItem(namn);   
            }
            
        }catch(InfException e) {
            JOptionPane.showMessageDialog(null, "fel");
        }
    }

     private void fyllBoxMedOmrade() {
         String fraga = "SELECT benamning from omrade";
         
         ArrayList<String> allaOmradeNamn;
         
          try {
            allaOmradeNamn = idb.fetchColumn(fraga);
            
            for(String namn:allaOmradeNamn) {
                namnPaOmradeBox.addItem(namn);   
            }
            
        }catch(InfException e) {
            JOptionPane.showMessageDialog(null, "fel");
        }
    }
     //ovan är två metoder som först ställer en sql fråga mot databasen som hämtar samtliga agent- och områdesnamn från databasen. 
     //Sedan så använder vi oss av en arraylist of strings för att hålla agent och områdes objekt 
     //därefter körs en for-loop igenom samtliga objekt för att sedan lägga till dom i komboboxen. 
     // Vi använder oss av "Try" och "catch" genomgående i applikationen. De hanterar undantag som kan uppstå vid kod- eller datafel under programutförande. "Try" är där undantaget uppstår i koden och en "catc-en" fångar undantagen och sedan hanterar det. 
     //När catchen fångar upp undantaget så skrivs ett felmeddelande ut till utvecklaren, av kompliatorn. 
     //En try och catch används för att programmet/applikationen inte ska crascha.
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rubrik = new javax.swing.JLabel();
        namnPåAgenter = new javax.swing.JComboBox<>();
        väljAgentRubrik = new javax.swing.JLabel();
        valjOmrådeRubrik = new javax.swing.JLabel();
        ändraOmrådeschefKnapp = new javax.swing.JButton();
        namnPaOmradeBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rubrik.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        rubrik.setText("Ändra områdeschef ");

        väljAgentRubrik.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        väljAgentRubrik.setText("Välj agent:");

        valjOmrådeRubrik.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        valjOmrådeRubrik.setText("Välj område:");

        ändraOmrådeschefKnapp.setText("Ändra Områdeschef");
        ändraOmrådeschefKnapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ändraOmrådeschefKnappActionPerformed(evt);
            }
        });

        jLabel1.setText("Inloggad som Administratör");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namnPåAgenter, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(väljAgentRubrik, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(115, 115, 115)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namnPaOmradeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valjOmrådeRubrik)))
                            .addComponent(rubrik)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)))
                .addContainerGap(161, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ändraOmrådeschefKnapp)
                .addGap(113, 113, 113))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(rubrik)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(väljAgentRubrik)
                    .addComponent(valjOmrådeRubrik))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namnPåAgenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namnPaOmradeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(ändraOmrådeschefKnapp)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ändraOmrådeschefKnappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ändraOmrådeschefKnappActionPerformed
        try{
          String agentNamn = namnPåAgenter.getSelectedItem().toString();
          String fraga = "SELECT agent_ID from agent where Namn ='" + agentNamn + "'";
          String resultat = idb.fetchSingle(fraga);
          int agentInt = Integer.parseInt(resultat);
          int rattAgentId = agentInt;
          //agentNamn håller de valda agenten som användaren valt i komboboxen 
          //sedan ställs en sql fråga mot databasen där agent_ID hämtas ut från tabellen agent där namn är samma som det valda agentnamnet i komboboxen 
          //sedan gör vi om stringen till en int, där "rattAgentId" håller integervärdet från "agentInt".
          
          String omrade = namnPaOmradeBox.getSelectedItem().toString();
          System.out.println(omrade);
          String fraga1 = "SELECT Omrades_ID from omrade where benamning = " + "'" + omrade + "'";
          String resultatFraga1 = idb.fetchSingle(fraga1);
          String fragaOmrade = "SELECT Agent_ID from omradeschef where Omrade = " + "'" + resultatFraga1 + "'";
          String resultatOmrade = idb.fetchSingle(fragaOmrade);
          System.out.println(resultatOmrade);
          int agentNyttID = Integer.parseInt(resultatOmrade);
          int omradet = Integer.parseInt(resultatOmrade);
          System.out.println(omradet);
          //"ormade" håller de valda områder som användaren valt i komboboxen som agenten ska bli områdeschef för.
          //vi använder oss av en system.out.println för att se innan vi fick koden att fungera vart det kraschade (vart felet i koden var).
          //Sedan ställs en sql fråga mot databasen där områdes_ID från tabellen område hämtas ut från databasen där benämning (kolumnen) är samma som det område man väljer i komboboxen.
          //Därefter ställs en till sql fråga mot databasen där vi hämtar agent_ID frpn tabellen områdeschef där område är samma som sql frågan ovan 
          //vi ställer denna fråga då vi inte vill att man ska kunna ändra på en agent som redan är områdeschef för ett område 
          //sedan använder vi återigen metoden Integer.parseInt()för att konvertera ett strängvärde, som lagrats i variabeln "resultatOmrade", till en int datatyp. 
          //Därefter så tilldelar den värdet till "agentNyttID" samt "omradet". 
          //Vi använde en system.out.println till för att återigen se vilka kodrader som skrivs ut och vart i koden den slutar köra.
          
          
          idb.update("UPDATE omradeschef SET agent_ID = " + "'" + rattAgentId+ "'" + "where agent_ID = " + "'" + agentNyttID + "'");
          //här sker en update som updaterar i tabellen omrdeschef om den agent som användaren valt till att bli områdeschef 
          
       
         rubrik.setText("Områdeschef uppdaterad");
         //därefter uppdateras rubriken till meddelandet ovan vid lyckad ändring.
          
        }catch(InfException e) {
            JOptionPane.showMessageDialog(null, "Agenten är redan områdeschef");
            System.out.println("Internt felmeddelande" + e.getMessage());
        }   
         //Om agenten som användaren väljer i komboboxen redan är områdeschef för ett område så kommer användaren att få felmeddelandet ovan. 
        
    }//GEN-LAST:event_ändraOmrådeschefKnappActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ÄndraAgentSomÄrOmrådeschef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ÄndraAgentSomÄrOmrådeschef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ÄndraAgentSomÄrOmrådeschef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ÄndraAgentSomÄrOmrådeschef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ÄndraAgentSomÄrOmrådeschef(idb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> namnPaOmradeBox;
    private javax.swing.JComboBox<String> namnPåAgenter;
    private javax.swing.JLabel rubrik;
    private javax.swing.JLabel valjOmrådeRubrik;
    private javax.swing.JLabel väljAgentRubrik;
    private javax.swing.JButton ändraOmrådeschefKnapp;
    // End of variables declaration//GEN-END:variables
}
